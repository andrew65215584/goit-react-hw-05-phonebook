{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/contactList.module.css","components/Filter/filter.module.css","components/Notiffication/Notification.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","App.module.css"],"names":["module","exports","Notification","className","ContactForm","getName","getContact","useState","name","setName","number","setNumber","onSubmit","event","preventDefault","id","uuidv4","styles","form","label","type","value","onChange","target","input","button","Filter","filter","getFilterName","ContactList","contactList","deleteContact","TransitionGroup","component","list","map","el","CSSTransition","key","timeout","classNames","unmountOnExit","item","onClick","App","state","contacts","notification","data","setState","contact","flag","prev","visibleDiv","filteredItems","toLowerCase","includes","prevState","this","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","in","appear","style","title","onEntered","length","subTitle","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38458be4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__wfQca\",\"label\":\"ContactForm_label__20Iqm\",\"input\":\"ContactForm_input__2kVAe\",\"button\":\"ContactForm_button__2GHoJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactList_item__2jWfp\",\"button\":\"contactList_button__YhzW4\",\"list\":\"contactList_list__3piR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"filter_title__2oE2H\",\"input\":\"filter_input__1Z3Ax\"};","import React from 'react'\r\nimport  './Notification.css'\r\n\r\nconst Notification = () => {\r\nreturn (<div className=\"error\"> This contact has already exist</div>)\r\n}\r\n\r\n\r\nexport default Notification;","import React, { useState } from 'react';\nimport styles from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({ getName, getContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setName(value);\n  };\n\n  const handleInputChange2 = ({ target: { name, value } }) => {\n    setNumber(value);\n  };\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    getContact({ name, number, id: uuidv4() });\n\n    getName({ name: number });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm} className={styles.form}>\n      <h2>Name</h2>\n\n      <label className={styles.label}>\n        Ім'я:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          className={styles.input}\n        />\n      </label>\n\n      <br />\n\n      <label className={styles.label}>\n        Номер телефона:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange2}\n          className={styles.input}\n        />\n      </label>\n\n      <button type=\"submit\" className={styles.button}>\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  getContact: PropTypes.func,\n  getName: PropTypes.func,\n};\n\nexport default ContactForm;\n\n/* import React, { Component } from 'react';\nimport styles from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n    this.props.getName(this.state.name);\n  };\n\n  handleSubmitForm = event => {\n    event.preventDefault();\n\n    this.props.getContact({ ...this.state, id: uuidv4() });\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmitForm} className={styles.form}>\n        <h2>Name</h2>\n\n        <label className={styles.label}>\n          Ім'я:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n            className={styles.input}\n          />\n        </label>\n\n        <br />\n\n        <label className={styles.label}>\n          Номер телефона:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputChange}\n            className={styles.input}\n          />\n        </label>\n\n        <button type=\"submit\" className={styles.button}>\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  getContact: PropTypes.func,\n  getName: PropTypes.func,\n};\n\nexport default ContactForm;\n    */\n","import React from 'react';\nimport styles from './filter.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ filter, getFilterName }) {\n  return (\n    <>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={getFilterName}\n        className={styles.input}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  getFilterName: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport styles from './contactList.module.css';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport '../../app.css';\n\nfunction ContactList({ contactList, deleteContact }) {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contactList.map(el => ( <CSSTransition\n            key={el.id}\n            timeout={2000}\n            classNames=\"contactList\"\n            unmountOnExit\n          >\n            <li key={el.id} className={styles.item}>\n              <span>{el.name}</span>\n              <span>: {el.number}</span>\n              <button\n                onClick={() => deleteContact(el.id)}\n                className={styles.button}\n              >\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        \n      ))}\n    </TransitionGroup>\n  );\n}\nContactList.propTypes = {\n  contactList: PropTypes.arrayOf(PropTypes.object),\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\n\nimport style from './App.module.css';\nimport './app.css';\n\nimport Notification from './components/Notiffication/Notification';\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    notification: false,\n  };\n\n  getName = data => {\n    this.setState({ name: data });\n  };\n\n  getContact = contact => {\n    let flag = true;\n\n    this.state.contacts.map(el =>\n      el.name === contact.name ? (flag = false) : '',\n    );\n\n    flag\n      ? this.setState(prev => {\n          return { ...prev, contacts: [...prev.contacts, contact] };\n        })\n      : this.visibleDiv();\n  };\n\n  visibleDiv() {\n    this.setState({ notification: true });\n  }\n\n  getFilterName = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  filteredItems = () => {\n    return this.state.filter\n      ? this.state.contacts.filter(el =>\n          el.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n        )\n      : this.state.contacts;\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n\n    if (contacts) {\n      const parsedContacts = JSON.parse(contacts);\n      this.setState({ contacts: parsedContacts });\n    } else {\n      return;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('prevState', prevState);\n\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n\n    console.log('this.state', this.state);\n  }\n\n  render() {\n    return (\n      <div>\n        <CSSTransition\n          in={true}\n          timeout={500}\n          classNames=\"mainTitle\"\n          appear\n          unmountOnExit\n        >\n          <h1 className={style.title}>Phonebook</h1>\n        </CSSTransition>\n\n        <div className={style.form}>\n          <CSSTransition\n            in={this.state.notification}\n            unmountOnExit\n            timeout={2000}\n            classNames=\"error\"\n            onEntered={() => this.setState({ notification: false })}\n          >\n            <Notification />\n          </CSSTransition>\n\n          <ContactForm getContact={this.getContact} getName={this.getName} />\n        </div>\n\n        <CSSTransition\n          in={this.state.contacts.length >= 1}\n          timeout={300}\n          unmountOnExit\n          classNames=\"contactsTitle\"\n        >\n          <h1 className={style.title}>Contacts</h1>\n        </CSSTransition>\n\n        <CSSTransition\n          in={this.state.contacts.length >= 2}\n          timeout={300}\n          classNames=\"contactsTitle\"\n          unmountOnExit\n        >\n          <h3 className={style.subTitle}>Find contacts by name</h3>\n        </CSSTransition>\n\n        <CSSTransition\n          in={this.state.contacts.length >= 2}\n          timeout={300}\n          classNames=\"contactsTitle\"\n          unmountOnExit\n        >\n          <Filter\n            filter={this.state.filter}\n            getFilterName={this.getFilterName}\n          />\n        </CSSTransition>\n\n        <ContactList\n          contactList={this.filteredItems()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2R5gD\",\"subTitle\":\"App_subTitle__1LUPE\"};"],"sourceRoot":""}